#!/usr/bin/env bash

set -x

source configuration


# create DB
mysql -e "CREATE DATABASE keystone;"
mysql -e "GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' IDENTIFIED BY '$KEYSTONE_DBPASS';"
mysql -e "GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'$KEYSTONE_DB_HOST' IDENTIFIED BY '$KEYSTONE_DBPASS';"

# keystone
## install
apt install -y keystone apache2 libapache2-mod-wsgi

## stop keystone from starting automatically
systemctl mask keystone.service
systemctl stop keystone.service

## zero configuration
cat /usr/share/keystone/keystone.conf.sample > /etc/keystone/keystone.conf

## token
sed -ri "s/^\#admin_token.*/admin_token = $KEYSTONE_TOKEN/" /etc/keystone/keystone.conf
sed -ri "s/^#provider =.*/provider = fernet/" /etc/keystone/keystone.conf

## db
sed -ri "s@^connection =.*@connection = mysql+pymysql://keystone:$KEYSTONE_DBPASS\@${HOSTNAME['controller1']}/keystone@" \
    /etc/keystone/keystone.conf

## populate
su -s /bin/sh -c "keystone-manage db_sync" keystone

## frenet
keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone

## paste
cd /etc/keystone
curl -O https://raw.githubusercontent.com/openstack/keystone/stable/mitaka/etc/keystone-paste.ini
cd -


# apache
## main settings
cat <( echo "ServerName ${HOSTNAME['controller1']}" ) /etc/apache2/apache2.conf > /tmp/keystone_apache_settings
cat /tmp/keystone_apache_settings > /etc/apache2/apache2.conf
rm /tmp/keystone_apache_settings

## wsgi
cat << EOF > /etc/apache2/sites-available/wsgi-keystone.conf
Listen 5000
Listen 35357

<VirtualHost *:5000>
    WSGIDaemonProcess keystone-public processes=5 threads=1 user=keystone group=keystone display-name=%{GROUP}
    WSGIProcessGroup keystone-public
    WSGIScriptAlias / /usr/bin/keystone-wsgi-public
    WSGIApplicationGroup %{GLOBAL}
    WSGIPassAuthorization On
    ErrorLogFormat "%{cu}t %M"
    ErrorLog /var/log/apache2/keystone.log
    CustomLog /var/log/apache2/keystone_access.log combined

    <Directory /usr/bin>
        Require all granted
    </Directory>
</VirtualHost>

<VirtualHost *:35357>
    WSGIDaemonProcess keystone-admin processes=5 threads=1 user=keystone group=keystone display-name=%{GROUP}
    WSGIProcessGroup keystone-admin
    WSGIScriptAlias / /usr/bin/keystone-wsgi-admin
    WSGIApplicationGroup %{GLOBAL}
    WSGIPassAuthorization On
    ErrorLogFormat "%{cu}t %M"
    ErrorLog /var/log/apache2/keystone.log
    CustomLog /var/log/apache2/keystone_access.log combined

    <Directory /usr/bin>
        Require all granted
    </Directory>
</VirtualHost>
EOF

## enable
ln -s /etc/apache2/sites-available/wsgi-keystone.conf /etc/apache2/sites-enabled


## restart
systemctl restart apache2.service

## cleanup
rm -f /var/lib/keystone/keystone.db


# services
export OS_TOKEN=$KEYSTONE_TOKEN
export OS_URL=http://${HOSTNAME['controller1']}:35357/v3
export OS_IDENTITY_API_VERSION=3
openstack service create --name keystone --description "OpenStack Identity" identity

## create endpoints
openstack endpoint create --region RegionOne identity public http://${HOSTNAME['controller1']}:5000/v3
openstack endpoint create --region RegionOne identity internal http://${HOSTNAME['controller1']}:5000/v3
openstack endpoint create --region RegionOne identity admin http://${HOSTNAME['controller1']}:35357/v3

## admin user
openstack domain create --description "Default Domain" default
openstack project create --domain default --description "Admin Project" admin
openstack user create --domain default --password $ADMIN_PASS admin
openstack role create admin
openstack role add --project admin --user admin admin
openstack project create --domain default --description "Service Project" service

## demo user
openstack project create --domain default --description "Demo Project" demo
openstack user create --domain default --password $DEMO_PASS demo
openstack role create user
openstack role add --project demo --user demo user


# openrc
mkdir ~/openstack-credentials
cd ~/openstack-credentials

cat << EOF > admin-openrc
export OS_PROJECT_DOMAIN_NAME=default
export OS_USER_DOMAIN_NAME=default
export OS_PROJECT_NAME=admin
export OS_USERNAME=admin
export OS_PASSWORD=$ADMIN_PASS
export OS_AUTH_URL=http://${HOSTNAME['controller1']}:35357/v3
export OS_IDENTITY_API_VERSION=3
export OS_IMAGE_API_VERSION=2
EOF

cat << EOF > demo-openrc
export OS_PROJECT_DOMAIN_NAME=default
export OS_USER_DOMAIN_NAME=default
export OS_PROJECT_NAME=demo
export OS_USERNAME=demo
export OS_PASSWORD=$DEMO_PASS
export OS_AUTH_URL=http://${HOSTNAME['controller1']}:5000/v3
export OS_IDENTITY_API_VERSION=3
export OS_IMAGE_API_VERSION=2
EOF
